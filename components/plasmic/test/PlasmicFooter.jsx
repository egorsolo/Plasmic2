// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: djQLBAWjYFxMHog99o3R36
// Component: k5coaKxkMeOu
import * as React from "react";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { useScreenVariants as useScreenVariantsrj4ZCiCcNb8F } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Rj4zCiCcNB8f/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: djQLBAWjYFxMHog99o3R36/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: k5coaKxkMeOu/css
import FacebookIcon from "./icons/PlasmicIcon__Facebook"; // plasmic-import: aLgZqWCmjvul/icon

createPlasmicElementProxy;

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFooter__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsrj4ZCiCcNb8F()
  });
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <Stack__
        as={"section"}
        data-plasmic-name={"links"}
        data-plasmic-override={overrides.links}
        hasGap={true}
        className={classNames(projectcss.all, sty.links)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__dFdXl)}
        >
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__d4Uk6
            )}
            component={Link}
            href={"/"}
            platform={"nextjs"}
          >
            {"Home"}
          </PlasmicLink__>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__hnPzf
            )}
            component={Link}
            href={"/#services"}
            platform={"nextjs"}
          >
            {"Services"}
          </PlasmicLink__>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__pGnHv
            )}
            component={Link}
            href={"/#work"}
            platform={"nextjs"}
          >
            {"Work"}
          </PlasmicLink__>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__vj2D5
            )}
            component={Link}
            href={"/#about"}
            platform={"nextjs"}
          >
            {"About"}
          </PlasmicLink__>
          <PlasmicLink__
            className={classNames(
              projectcss.all,
              projectcss.a,
              projectcss.__wab_text,
              sty.link__uuy6J
            )}
            component={Link}
            href={"/#contact"}
            platform={"nextjs"}
          >
            {"Contact"}
          </PlasmicLink__>
        </Stack__>
        <div className={classNames(projectcss.all, sty.columns__kVqqa)}>
          <div className={classNames(projectcss.all, sty.column__tndnv)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eHiZ)}
            >
              <PlasmicLink__
                aria-label={"Facebook"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__gv7IU
                )}
                component={Link}
                href={"https://www.facebook.com"}
                platform={"nextjs"}
                target={"_blank"}
              >
                <FacebookIcon
                  data-plasmic-name={"svg"}
                  data-plasmic-override={overrides.svg}
                  className={classNames(projectcss.all, sty.svg)}
                  role={"img"}
                />
              </PlasmicLink__>
              <PlasmicLink__
                aria-label={"Instagram"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__njXx
                )}
                component={Link}
                href={"https://www.instagram.com"}
                platform={"nextjs"}
                target={"_blank"}
              >
                <PlasmicImg__
                  data-plasmic-name={"instapng"}
                  data-plasmic-override={overrides.instapng}
                  alt={""}
                  className={classNames(sty.instapng)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/test/images/group11Png.png",
                    fullWidth: 326,
                    fullHeight: 326,
                    aspectRatio: undefined
                  }}
                />
              </PlasmicLink__>
              <PlasmicLink__
                aria-label={"Twitter"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link___9A5Dq
                )}
                component={Link}
                href={"https://www.twitter.com"}
                platform={"nextjs"}
                target={"_blank"}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___763Rz)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/test/images/twitterpng.png",
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />
              </PlasmicLink__>
              <PlasmicLink__
                aria-label={"Linkedin"}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__rIUoH
                )}
                component={Link}
                href={"https://www.linkedin.com"}
                platform={"nextjs"}
                target={"_blank"}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__qunXb)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/test/images/linkedinpng.png",
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />
              </PlasmicLink__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.column__knTIb)}>
            <div className={classNames(projectcss.all, sty.freeBox__thdsl)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__p02LG)}
                displayHeight={"32px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"32px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/test/images/image14.png",
                  fullWidth: 204,
                  fullHeight: 156,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5DmX
                )}
              >
                {"anna@design.com"}
              </div>
            </div>
          </div>
        </div>
      </Stack__>
      <div
        data-plasmic-name={"section"}
        data-plasmic-override={overrides.section}
        className={classNames(projectcss.all, sty.section)}
      >
        <div className={classNames(projectcss.all, sty.columns__j8RGo)}>
          <div className={classNames(projectcss.all, sty.column___5T7M)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fESzB
              )}
            >
              {"\u00a9 2030 Freelance Portfolio."}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__oUi9)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iiItg
              )}
            >
              {"Built by Anna Wu"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__uoP3O)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___86DQf
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Made in Plasmic"
                : "Made in Plasmic"}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "links", "svg", "instapng", "section"],
  links: ["links", "svg", "instapng"],
  svg: ["svg"],
  instapng: ["instapng"],
  section: ["section"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFooter__ArgProps,
          internalVariantPropNames: PlasmicFooter__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    links: makeNodeComponent("links"),
    svg: makeNodeComponent("svg"),
    instapng: makeNodeComponent("instapng"),
    section: makeNodeComponent("section"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
